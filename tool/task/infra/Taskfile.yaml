version: 3

vars:
  pulumiCli: pulumi

  infraBaseDir: deploy
  pulumiDefaultStack: dev

run: once

tasks:
  # Ensure
  ensure-component-exists:
    desc: Ensure that component directory exists
    vars:
      componentName: '{{ .componentName | default "rtfm-you-forgot-to-pass-component-name" }}'
    internal: true
    silent: true
    cmds:
      - cmd: if [ ! -d {{ .infraBaseDir }}/{{ .componentName }} ]; then echo "Component directory '{{ .infraBaseDir }}/{{ .componentName }}' not found"; exit 1; fi

  # Pulumi infrastructure for a given stack (template)
  pulumi-infra-template:
    desc: Run pulumi command for a given stack
    internal: true
    vars:
      pulumiCommand: '{{ .pulumiCommand | default "up" }}'
      componentName: '{{ .componentName | default "rtfm-you-forgot-to-pass-component-name" }}'
      stackName: '{{ .stackName | default .pulumiDefaultStack }}'
      refresh: '{{ .refresh | default "" }}'
    cmds:
      - task: ensure-component-exists
        vars:
          # Propagate componentName
          componentName: '{{ .componentName }}'
        silent: true
      - cmd: '{{ .pulumiCli }} {{ .pulumiCommand }} --fully-qualify-stack-names {{ .refresh }} --cwd {{ .infraBaseDir }}/{{ .componentName }} --stack {{ .stackName }}'

  # Update infrastructure for a given stack
  update-infra:
    desc: Update infrastructure for a given stack, necessarily append `-- <component-name>` to your command in order to specify component to use, optionally append `stack-name` to specify stack name, and `--refresh` to refresh the state
    cmds:
      - task: pulumi-infra-template
        vars:
          pulumiCommand: up
          componentName: '{{ (split " " .CLI_ARGS)._0 }}'
          stackName: '{{ if ne (split " " .CLI_ARGS)._1 "--refresh" }}{{ (split " " .CLI_ARGS)._1 }}{{ end }}'
          refresh: '{{ if eq (split " " .CLI_ARGS)._2 "--refresh" }}--refresh{{ else if eq (split " " .CLI_ARGS)._1 "--refresh" }}--refresh{{ end }}'

  # Destroy infrastructure for a given stack
  destroy-infra:
    desc: Destroy infrastructure for a given stack, necessarily append `-- <component-name>` to your command in order to specify component to use, optionally append `stack-name` to specify stack name, and `--refresh` to refresh the state
    cmds:
      - task: pulumi-infra-template
        vars:
          pulumiCommand: destroy
          componentName: '{{ (split " " .CLI_ARGS)._0 }}'
          stackName: '{{ if ne (split " " .CLI_ARGS)._1 "--refresh" }}{{ (split " " .CLI_ARGS)._1 }}{{ end }}'
          # If either arg 1 or 2 is --refresh, then refresh
          refresh: '{{ if eq (split " " .CLI_ARGS)._2 "--refresh" }}--refresh{{ else if eq (split " " .CLI_ARGS)._1 "--refresh" }}--refresh{{ end }}'

  # Create a new infrastructure stack
  create-infra:
    desc: Create a new infrastructure stack
    cmds:
      - task: pulumi-infra-template
        vars:
          pulumiCommand: stack init
          componentName: '{{ (split " " .CLI_ARGS)._0 }}'
          stackName: '{{ (split " " .CLI_ARGS)._1 }}'
          refresh: '{{ if eq (split " " .CLI_ARGS)._2 "--refresh" }}--refresh{{ end }}'
